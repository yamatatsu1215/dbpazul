// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(uuid())
  username  String
  email String @unique
  password String
  profileImage String? @default("https://example.com/default-profile-image.png")
  createdAt DateTime @default(now())
  rooms RoomParticipant[]
  followers Follow[] @relation("Follower")
  followings Follow[] @relation("Following")
  messages Message[]
}

model Room {
  id String @id @default(uuid())
  name String
  createdBy String
  createdAt DateTime @default(now())
  participants RoomParticipant[]
  messages Message[]
}

model RoomParticipant {
  id String @id @default(uuid())
  userId String
  roomId String
  joinedAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
  room Room @relation(fields: [roomId], references: [id])
}

//フォローテーブル
model Follow {
  id String @id @default(uuid())
  followerId String
  followingId String
  createdAt DateTime @default(now())
  follower User @relation("Follower", fields: [followerId], references: [id])
  following User @relation("Following", fields: [followingId], references: [id])
}

//メッセージテーブル
model Message {
  id String @id @default(uuid())
  roomId String
  senderId String
  content String
  createdAt DateTime @default(now())
  room Room @relation(fields: [roomId], references: [id])
  sender User @relation(fields: [senderId], references: [id])
}